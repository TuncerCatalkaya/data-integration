@startuml

actor "Biologe\n(Experte)" as biologe

node "Biodiversitätsportale" {
    component "GBIF" as gbif {
        portout "Biodiversitätsfunddatensätze" as gbifExportPort
    }

    component "PANGAEA" as pangaea {
        portout "Biodiversitätsfunddatensätze" as pangaeaExportPort
    }
}

component "Datenintegrationssoftware" {
    portin "CSV" as csv

    storage "Objektspeicher (S3)" as s3
    interface "Vorabsignierte URLs" as s3Interface
    s3Interface -- s3

    component "Import" as import

    component "Abbildung" as abbildung
    interface "Abgebildete Daten" as abbildungInterface
    abbildungInterface - abbildung

    component "Integration" as integration
    portout "Javascript Datei\nder Benutzeroberfläche" as javascriptDatei

    database "Datenbank" as datenbank
}

gbifExportPort --> csv
pangaeaExportPort --> csv
csv --> s3Interface: hochladen

import -> s3: liest
import --> datenbank: persistiert

abbildung -> datenbank: schreiben/lesen

integration -> abbildungInterface: verwendet

node "Biodiversity Warehouse (BDW)" {

    component "Benutzeroberfläche\nfür Administratoren" as adminUI

    component "BDW Backend" as backend {
        component Funddatenimport as funddatenImport
    }
    interface "REST Funddatenimport" as restDatenintegration
    interface "REST" as rest
    restDatenintegration -- funddatenImport
    rest - backend

    component "BDW Frontend" as frontend

    database "Datenbank" as bdwDatenbank

}

backend --> bdwDatenbank: schreiben/lesen

integration --> restDatenintegration: import der Funddaten\n(abgebildeten Daten)
frontend --> rest: Kommunikation

javascriptDatei -> adminUI

biologe -> adminUI: interagiert
biologe -> gbif: exportiert Funddaten
biologe -> pangaea: exportiert Funddaten

@enduml