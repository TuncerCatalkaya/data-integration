@startuml

actor "Biologieexperte" as biologe

node "Biodiversitätsportale" {
    component "GBIF" as gbif {
        portout "Biodiversitätsfunddatensätze" as gbifExportPort
    }

    component "PANGAEA" as pangaea {
        portout "Biodiversitätsfunddatensätze" as pangaeaExportPort
    }
}

component "Datenintegrationssoftware" {
    portin "CSV" as csv

    storage "MinIO (S3-Objektspeicher)" as s3
    interface "          Vorab signierte URLs" as s3Interface
    s3Interface -- s3

    component "Import" as import
    interface REST as importRest
    importRest -- import

    component "Abbildung" as abbildung
    interface "Abgebildete Daten" as abbildungInterface
    abbildungInterface - abbildung

    component "Integration" as integration
    portout "JavaScript-Datei\nder Benutzeroberfläche" as javascriptDatei

    component "API" as api
    interface "API-Definitionen" as apiInterface
    api -- apiInterface

    database "data-integration" as datenbank
}

gbifExportPort --> csv
pangaeaExportPort --> csv
csv --> s3Interface: hochladen
csv -> importRest: direkt\nimportieren

import -> s3: liest
import --> datenbank: persistiert

abbildung -> datenbank: schreiben/lesen

integration -> abbildungInterface: verwendet

node "Biodiversity Warehouse (BDW)" {

    component "Benutzeroberfläche\nfür Administratoren" as adminUI

    component "BDW Backend" as backend {
        component Funddatenimport as funddatenImport
    }
    interface "REST Funddatenimport" as restDatenintegration
    interface "REST" as rest
    restDatenintegration -- funddatenImport
    backend -- rest

    component "BDW Frontend" as frontend

    database "bdw" as bdwDatenbank

    component "BDW MinIO Service" as bdwMinioService
    interface "REST" as minioInterface
    minioInterface -- bdwMinioService

    storage "MinIO (S3-Objektspeicher)" as s3Bdw

}

backend --> minioInterface
s3Bdw <- bdwMinioService: schreiben/lesen

backend -> bdwDatenbank: schreiben/lesen
apiInterface <-- backend: implementiert/benutzt

integration --> restDatenintegration: import der Funddaten\n(abgebildeten Daten)
frontend --> rest: Kommunikation

javascriptDatei -> adminUI: eingebunden

biologe -> adminUI: interagiert
biologe -> gbif: exportiert Funddaten
biologe -> pangaea: exportiert Funddaten

@enduml