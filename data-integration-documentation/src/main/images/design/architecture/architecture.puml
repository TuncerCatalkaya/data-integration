@startuml

node "data-integration-parent" as dataIntegrationParent {
    node "backend" as dataIntegrationBackend {
        component "data-integration-application" as application
        interface REST as dataIntegrationApplicationRest

        component "data-integration-service" as service
    }

    component "data-integration-frontend" as frontend
    interface "build" as frontendBuild

    component "data-integration-model" as model

    component "data-integration-api" as api
    interface "API" as apiInterface

    database "data-integration" as db
}

node "target-application" as targetApplication {
    component backend as targetApplicationBackend
    interface REST as targetApplicationBackendRest
}

component s3
interface "  presigned urls" as s3PresignedUrl

targetApplication -l[hidden]-> dataIntegrationParent

dataIntegrationBackend --> db: read/write

s3PresignedUrl - s3
frontend --> s3PresignedUrl: upload files
application -> s3: read/write

targetApplicationBackendRest - targetApplicationBackend
api -- apiInterface

dataIntegrationApplicationRest -- application
frontend --> dataIntegrationApplicationRest: communicates

frontend - frontendBuild
application --> frontendBuild: includes\nand serves

application ..> service: uses
service ..> model: uses
api ..> model: uses

targetApplicationBackend --> apiInterface: implements
application --> targetApplicationBackendRest: integration \nand reading header data

note right of s3PresignedUrl
generated
by backend
end note

@enduml
